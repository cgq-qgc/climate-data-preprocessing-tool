# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record,
# publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

variables:
  AZURE: True
  CODECOV_TOKEN: "53ed8bd6-fe08-4b52-a76d-733bf67bc574"
  CDPREP_OUTPUT_DIRNAME: 'cdprep_0.2.0_win_amd64'

pool:
  vmImage: 'windows-2019'

strategy:
  matrix:
    Python37:
      python.version: '3.7'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
    pip install -r requirements-dev.txt
    pip install pytest-azurepipelines
  displayName: 'Install dependencies'

- script: |
    python runtests.py
  displayName: 'Run tests'
  continueOnError: false

- script: |
    codecov
  displayName: 'Run codecov'

- script: |
    python -m pip install pyinstaller==3.6 pywin32 tornado
    set PYTHONPATH=$(Build.SourcesDirectory);%PYTHONPATH%
    cd ./releases
    pyinstaller.exe cdprep.spec
    cd ..
  displayName: 'Build package'

- task: PublishPipelineArtifact@0
  inputs:
    artifactName: '$(CDPREP_OUTPUT_DIRNAME)'
    targetPath: '$(Build.SourcesDirectory)/releases/$(CDPREP_OUTPUT_DIRNAME)'
